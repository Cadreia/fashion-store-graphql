{"version":3,"file":"static/js/757.eb8e1181.chunk.js","mappings":"wMAGaA,EAA0BC,EAAAA,GAAAA,IAAH,scAgCvBC,EAAiBD,EAAAA,GAAAA,IAAH,oKAML,gBAAGE,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAH,mPAcTK,EAA4BL,EAAAA,GAAAA,IAAH,gI,GAQTA,EAAAA,GAAAA,KAAH,+DAKIA,EAAAA,GAAAA,KAAH,uC,QCtD3B,EAduB,SAAC,GAAuB,IAArBM,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtBC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,MAAOP,EAAaI,EAAbJ,SACrB,OACE,UAACH,EAAD,YACE,SAACE,EAAD,CAAgBS,UAAU,QAAQR,SAAUA,KAC5C,UAACG,EAAD,YACE,iBAAMK,UAAU,OAAhB,SAAwBF,KACxB,kBAAME,UAAU,QAAhB,UAAyBD,EAAzB,cAEF,SAACN,EAAD,CAAWO,UAAU,gBAAgBC,QAAS,kBAAMJ,EAAQD,IAA5D,8B,yNCFN,EANgC,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OAC9B,SAAC,KAAD,CAAUM,SAAUC,EAAAA,GAAkBC,UAAW,CAACR,KAAAA,GAAlD,SACG,SAACS,GAAD,OAAmB,SAAC,IAAD,CAAgBR,QAASQ,EAAeT,KAAMA,Q,UCJzDU,EAA6BhB,EAAAA,GAAAA,IAAH,sKAS1BiB,EAAiBjB,EAAAA,GAAAA,GAAH,4HASdkB,EAAmBlB,EAAAA,GAAAA,IAAH,sMCU7B,EArB0B,SAAC,GAAsB,IAApBmB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5BC,EAAaF,EAAMG,cACnBC,EAAeJ,EAAMK,cAC3B,OACE,UAACR,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,gBAAWJ,GAAnB,SAAkCE,OAEpC,SAACL,EAAD,UACGE,EAGEM,QAAO,SAACpB,EAAMqB,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACtB,GAAD,OACH,SAAC,EAAD,CAA8BA,KAAMA,GAAfA,EAAKuB,aCrBzBC,EAA+B9B,EAAAA,GAAAA,IAAH,qE,SCgBnC+B,GAAkBC,EAAAA,EAAAA,IAAyB,CAC7CC,YAAaC,EAAAA,KAGjB,GAAeC,EAAAA,EAAAA,IAAQJ,EAAvB,EAf4B,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YAE7B,OADAG,QAAQC,IAAIJ,IAEV,SAACH,EAAD,UACGG,EAAYL,KAAI,gBAAGC,EAAH,EAAGA,GAAOS,GAAV,mBACf,SAAC,GAAD,UAAgCA,GAART,WCP1BU,GAAkBC,EAAAA,EAAAA,IAAH,sKAuBrB,EARqC,kBACnC,SAAC,KAAD,CAAOC,MAAOF,EAAd,SACG,YAA+B,IAA5BG,EAA2B,EAA3BA,QAAgBC,GAAW,EAAlBC,MAAkB,EAAXD,MAClB,OAAID,GAAgB,SAAC,IAAD,KACb,SAAC,EAAD,CAAqBT,YAAaU,EAAKV","sources":["components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-item/collection-item.container.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    .custom-button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    &:hover {\n    .image {\n      opacity: unset;\n    }\n\n    .custom-button {\n      opacity: unset;\n    }\n  }\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n  @media screen and (max-width:800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n`;\n","import React from \"react\";\nimport { AddButton, CollectionFooterContainer, CollectionItemContainer, ImageContainer } from \"./collection-item.styles\";\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item\n  return (\n    <CollectionItemContainer>\n      <ImageContainer className=\"image\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <span className=\"name\">{name}</span>\n        <span className=\"price\">{price} CFA</span>\n      </CollectionFooterContainer>\n      <AddButton className=\"custom-button\" onClick={() => addItem(item)}>Add to Cart</AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nexport default CollectionItem;\n","import { Mutation } from \"react-apollo\";\nimport { ADD_ITEM_TO_CART } from \"../../graphql/queries\";\nimport CollectionItem from \"./collection-item.component\";\n\nconst CollectionItemContainer = ({ item }) => (\n  <Mutation mutation={ADD_ITEM_TO_CART} variables={{item}}>\n    {(addItemToCart) => <CollectionItem addItem={addItemToCart} item={item} />}\n  </Mutation>\n);\n\nexport default CollectionItemContainer;\n","import styled from \"styled-components\";\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr, 1fr;\n    gap: 15px;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { default as CollectionItem } from \"../collection-item/collection-item.container\";\nimport {\n  CollectionPreviewContainer,\n  PreviewContainer,\n  TitleContainer,\n} from \"./collection-preview.styles\";\n\nconst CollectionPreview = ({ title, items }) => {\n  const routeTitle = title.toLowerCase();\n  const displayTitle = title.toUpperCase();\n  return (\n    <CollectionPreviewContainer>\n      <TitleContainer>\n        <Link to={`/shop/${routeTitle}`}>{displayTitle}</Link>\n      </TitleContainer>\n      <PreviewContainer>\n        {items\n          // can preferably create a seperate collection selector that already filters the required number of items\n          // before passing to collection-overview and then collection-preview component\n          .filter((item, idx) => idx < 4)\n          .map((item) => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n      </PreviewContainer>\n    </CollectionPreviewContainer>\n  );\n};\n\nexport default CollectionPreview;\n","import styled from \"styled-components\";\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionsForPreview } from \"../../redux/shop/shop.selector\";\nimport CollectionPreview from '../collection-preview/collection-preview.component'\nimport { CollectionsOverviewContainer } from \"./collections-overview.styles\";\n\nconst CollectionsOverview = ({ collections }) => {\n  console.log(collections)\n  return (\n    <CollectionsOverviewContainer>\n      {collections.map(({ id, ...otherCollectionProps }) => (\n        <CollectionPreview key={id} {...otherCollectionProps} />\n      ))}\n    </CollectionsOverviewContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview,\n  });\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport Spinner from \"../spinner/spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\n\nconst GET_COLLECTIONS = gql`\n  {\n    collections {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionsOverviewContainer = () => (\n  <Query query={GET_COLLECTIONS}>\n    {({ loading, error, data }) => {\n      if (loading) return <Spinner />;\n      return <CollectionsOverview collections={data.collections} />;\n    }}\n  </Query>\n);\nexport default CollectionsOverviewContainer;\n"],"names":["CollectionItemContainer","styled","ImageContainer","imageUrl","AddButton","CustomButton","CollectionFooterContainer","item","addItem","name","price","className","onClick","mutation","ADD_ITEM_TO_CART","variables","addItemToCart","CollectionPreviewContainer","TitleContainer","PreviewContainer","title","items","routeTitle","toLowerCase","displayTitle","toUpperCase","to","filter","idx","map","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","console","log","otherCollectionProps","GET_COLLECTIONS","gql","query","loading","data","error"],"sourceRoot":""}